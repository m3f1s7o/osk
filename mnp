#! /bin/bash

commnd=$1
opt=$(sed "s/-//g" <<< "$2")

#echo "c:$commnd, o:$opt"

man $commnd | grep -P "^OPTIONS$" &>/dev/null
if [[ $? -eq 0 ]]; then
	begin="OPTIONS"
else
	begin="DESCRIPTION"
fi

read -ra bounds <<< $(man $commnd | grep -P "^[A-Z ]+$" | grep $begin -A 1 | xargs)
#echo "bounds: ${bounds[0]} - ${bounds[1]}"
wanted=$(man $commnd | awk "/^${bounds[0]}$/,/^${bounds[1]}$/" | awk "/^[ ]+-$opt/,/^${bounds[1]}/" | head -n -1)
#echo "$wanted"
#echo 
min_ident=$(printf "%s" "$wanted" | grep -P "^[ ]+\-$opt" | head -n 1 | tr " " "*" | cut -d "-" -f 1 | wc -c)
echo "identation: $min_ident"

#tail -n +2 <<< $wanted
desc=$(head -n 1 <<< $wanted)
end=""
while IFS= read -r line; do
	ident=0
	mod=$(tr " " "*" <<< $line)
	#echo "mod line: $mod"
	for (( i=0; i<${#mod}; i++ )); do
		if [[ "${mod:$i:1}" == "*" ]]; then
			((ident+=1))
		else
			break
		fi
	done

	#echo "${mod:0:10}""... ($ident)"

	if [[ $ident -gt $min_ident ]]; then
		#echo "add: $line"
		#desc="${desc}$(echo $line)"
		end=$(sed 's/[-.\\\[{}()*+?\\^$|\/#]/\\&/g' <<< $line)
	elif [[ $ident -eq 0 ]]; then
		continue
	else
		break
	fi
done <<< "$(tail -n +2 <<< $wanted)"
echo "end: $end"
# $end$ caused problems on sudo -l
#man $commnd | awk "/^[ ]+-$opt/, /$end$/"
man $commnd | awk "/^[ ]+-$opt/, /$end/"
#echo $desc
